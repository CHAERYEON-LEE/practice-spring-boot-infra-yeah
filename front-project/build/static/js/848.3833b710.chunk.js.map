{"version":3,"file":"static/js/848.3833b710.chunk.js","mappings":"0MAKA,MAsFA,EAtFqBA,KACnB,MAAMC,GAAWC,EAAAA,EAAAA,OACVC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,KAC5BC,EAASC,IAAcF,EAAAA,EAAAA,UAAS,KAChCG,EAAWC,IAAgBJ,EAAAA,EAAAA,WAAS,IACpCK,EAAOC,IAAYN,EAAAA,EAAAA,WAAS,IAC5BO,EAASC,IAAcR,EAAAA,EAAAA,WAAS,GA8BvC,OACES,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SACGJ,GACCE,EAAAA,EAAAA,KAAA,OAAAE,SAAK,0CAELC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,iDACJF,EAAAA,EAAAA,KAAA,UAAQI,KAAK,SAASC,QAASA,IAAMlB,EAAS,UAAUe,SAAC,uDAIzDC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,SAAOM,QAAQ,QAAOJ,SAAC,uDACvBF,EAAAA,EAAAA,KAAA,SACEI,KAAK,OACLG,GAAG,QACHC,SAAWC,GAAMnB,EAASmB,EAAEC,OAAOC,aAIvCR,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,SAAOM,QAAQ,UAASJ,SAAC,uDACzBF,EAAAA,EAAAA,KAAA,SACEI,KAAK,OACLG,GAAG,UACHC,SAAWC,GAAMhB,EAAWgB,EAAEC,OAAOC,aAIzCX,EAAAA,EAAAA,KAAA,UAAQI,KAAK,SAASC,QAzDZO,KAChB,GAAc,KAAVvB,GAA4B,KAAZG,EAKlB,OAJAK,GAAS,QACTgB,YAAW,KACThB,GAAS,EAAM,GACd,KAGLE,GAAW,GACXe,EAAAA,EACGC,KAAK,oBAAqB,CACzB1B,QACAG,YAEDwB,MAAMC,IACLtB,GAAa,GACbL,EAAS,IACTG,EAAW,GAAG,IAEfyB,OAAOC,GAAQC,QAAQC,IAAIF,KAC9BpB,GAAW,EAAM,EAqC8BG,SAAC,gDAGzCN,GACCI,EAAAA,EAAAA,KAACsB,EAAAA,EAAK,CAACC,QAAQ,wEAAiBnB,KAAK,QAAQoB,UAAQ,IAErD,GAED9B,GACCM,EAAAA,EAAAA,KAACyB,EAAAA,EAAK,CAACpC,MAAM,cAAcqC,KAAMhC,EAAWiC,KA3ChCC,KACpBjC,GAAa,GACbR,EAAS,SAAS,EAyCsDe,UAC9DF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,uFAGL,OAIL,C","sources":["pages/board/AddBoardPage.jsx"],"sourcesContent":["import axios from \"axios\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Modal, Alert } from \"antd\";\r\n\r\nconst AddBoardPage = () => {\r\n  const navigate = useNavigate();\r\n  const [title, setTitle] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [alert, setAlert] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const postBoard = () => {\r\n    if (title === \"\" || content === \"\") {\r\n      setAlert(true);\r\n      setTimeout(() => {\r\n        setAlert(false);\r\n      }, 3000);\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    axios\r\n      .post(\"/api/board/create\", {\r\n        title,\r\n        content,\r\n      })\r\n      .then((res) => {\r\n        setModalOpen(true);\r\n        setTitle(\"\");\r\n        setContent(\"\");\r\n      })\r\n      .catch((err) => console.log(err));\r\n    setLoading(false);\r\n  };\r\n\r\n  const handleModalOk = () => {\r\n    setModalOpen(false);\r\n    navigate(\"/board\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <div>로딩중입니다</div>\r\n      ) : (\r\n        <div>\r\n          <h1>게시글 등록하기</h1>\r\n          <button type=\"button\" onClick={() => navigate(\"/board\")}>\r\n            목록으로 돌아가기\r\n          </button>\r\n\r\n          <div>\r\n            <label htmlFor=\"title\">제목을 입력하세요</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"title\"\r\n              onChange={(e) => setTitle(e.target.value)}\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label htmlFor=\"content\">내용을 입력하세요</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"content\"\r\n              onChange={(e) => setContent(e.target.value)}\r\n            />\r\n          </div>\r\n\r\n          <button type=\"button\" onClick={postBoard}>\r\n            게시글 등록하기\r\n          </button>\r\n          {alert ? (\r\n            <Alert message=\"입력란을 모두 채워주세요!\" type=\"error\" closable />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {modalOpen ? (\r\n            <Modal title=\"Basic Modal\" open={modalOpen} onOk={handleModalOk}>\r\n              <p>게시글 등록이 완료되었습니다</p>\r\n            </Modal>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddBoardPage;\r\n"],"names":["AddBoardPage","navigate","useNavigate","title","setTitle","useState","content","setContent","modalOpen","setModalOpen","alert","setAlert","loading","setLoading","_jsx","_Fragment","children","_jsxs","type","onClick","htmlFor","id","onChange","e","target","value","postBoard","setTimeout","axios","post","then","res","catch","err","console","log","Alert","message","closable","Modal","open","onOk","handleModalOk"],"sourceRoot":""}